@model IEnumerable<DDAC.Models.Booking>
    @{
        Layout = "~/Views/Shared/_Layout.cshtml";
    }


    <!DOCTYPE html>

    <html>
    <head>
        <meta name="viewport" content="width=device-width" />
        <title></title>
    </head>
    <body>
        <br />
        <br />

        <div class="tab">
            <button class="tablinks" onclick="openCity(event, 'CreateBooking')">Create Booking</button>
            <button class="tablinks" onclick="openCity(event, 'DeleteBooking')">Delete Booking</button>
            <button class="tablinks" onclick="openCity(event, 'BookingDetails')">Booking Details</button>
            <button class="tablinks" onclick="openCity(event, 'EditBooking')">Edit Booking</button>
        </div>

        <div id="CreateBooking" class="tabcontent">
            <h2>Create Booking</h2>
            &nbsp;

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                var item = new DDAC.Models.Booking();
                <div class="form-horizontal">
                    <h4>Booking</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => item.ShipID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => item.ShipID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => item.ShipID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => item.ContainerID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => item.ContainerID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => item.ContainerID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => item.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => item.Price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => item.Price, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => item.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => item.Date, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => item.Date, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => item.Time, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => item.Time, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => item.Time, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => item.Departure, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => item.Departure, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => item.Departure, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => item.Arrival, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => item.Arrival, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => item.Arrival, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }

        </div>


        <div id="DeleteBooking" class="tabcontent">
            <h2>Delete</h2>

            <h3>Are you sure you want to delete this?</h3>
            <div>
                <h4>Booking</h4>

                <h2>Index</h2>

                <p>
                    @Html.ActionLink("Create New", "Create")
                </p>
                <table class="table">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.ShipID)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ContainerID)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Price)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Date)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Time)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Departure)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Arrival)
                        </th>
                        <th></th>
                    </tr>


                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.ShipID)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ContainerID)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Price)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Date)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Time)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Departure)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Arrival)
                            </td>
                            <td>
                                @Html.ActionLink("Edit", "Edit", new { id = item.BookingID }) |
                                @Html.ActionLink("Details", "Details", new { id = item.BookingID }) |
                                @Html.ActionLink("Delete", "Delete", new { id = item.BookingID })
                            </td>
                        </tr>
                    }

                </table>
                <hr />
                
                @*<dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(model => model.ShipID)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.ShipID)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.ContainerID)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.ContainerID)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Price)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Price)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Date)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Date)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Time)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Time)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Departure)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Departure)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Arrival)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Arrival)
                    </dd>

                </dl>*@

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-actions no-color">
                        <input type="submit" value="Delete" class="btn btn-default" /> |

                    </div>
                }
            </div>
        </div>

        <div id="DetailsBooking" class="tabcontent">
            <h3>Tokyo</h3>
            <p>Tokyo is the capital of Japan.</p>
        </div>

        <script>
            function openCity(evt, cityName) {
                var i, tabcontent, tablinks;
                tabcontent = document.getElementsByClassName("tabcontent");
                for (i = 0; i < tabcontent.length; i++) {
                    tabcontent[i].style.display = "none";
                }
                tablinks = document.getElementsByClassName("tablinks");
                for (i = 0; i < tablinks.length; i++) {
                    tablinks[i].className = tablinks[i].className.replace(" active", "");
                }
                document.getElementById(cityName).style.display = "block";
                evt.currentTarget.className += " active";
            }
        </script>

    </body>



</html>
